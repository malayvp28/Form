{"version":3,"sources":["Cropper.js","Components/Form/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Cropper","useState","unit","crop","setCrop","result","SetResult","openStatus","setOpen","cropStatus","setcrop","resultStatus","setresult","image","setImage","text","setText","mode","setMode","worker","createWorker","logger","m","showresult","a","load","loadLanguage","initialize","recognize","data","videoConstraints","width","height","facingMode","webcamRef","react","useRef","imgeStatus","setStatus","src","setSrc","capture","useCallback","imageSrc","current","getScreenshot","setCam","console","log","camStatus","className","style","marginLeft","onImageLoaded","onChange","marginTop","display","flexDirection","textAlign","audio","ref","screenshotFormat","alt","justifyContent","Button","variant","color","onClick","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","base64Image","toDataURL","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","Form","classes","AppBar","position","Toolbar","IconButton","edge","aria-label","App","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f8534210.chunk.js","sourcesContent":["import react ,{useState} from 'react';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport {createWorker} from 'tesseract.js';\r\nimport ReactCrop from 'react-image-crop';\r\nimport Webcam from \"react-webcam\";\r\nimport { Button} from '@material-ui/core';\r\n\r\nconst Cropper =()=>{\r\nconst [crop,setCrop]=useState(\r\n     {\r\n        unit: '%',\r\n      \r\n      }\r\n);\r\n\r\nconst [file,setFile]=useState(null);\r\nconst [result,SetResult]=useState(null);\r\nconst [openStatus,setOpen]=useState(true);\r\nconst [cropStatus,setcrop]=useState(false);\r\nconst [resultStatus,setresult]=useState(false);\r\nconst handleFile=e=>{\r\nsetFile(URL.createObjectURL(e.target.files[0]))\r\n}\r\nconst [image,setImage]=useState();\r\nconst [text,setText]=useState(\"\");\r\n function getCroppedImg() {\r\n     console.log(crop)\r\n    const canvas = document.createElement('canvas');\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext('2d');\r\n   \r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height,\r\n    );\r\n    const base64Image = canvas.toDataURL('image/jpeg');\r\n    setCrop(true);\r\n    setOpen(true);\r\n    SetResult(base64Image);\r\n    setresult(true);\r\n\r\n }\r\n const [mode,setMode]=useState(\"user\");\r\n const front=()=>{\r\n  setMode(\"user\")\r\n }\r\n const back=()=>{\r\n\r\n setMode(\"environment\")\r\n }\r\n const worker = createWorker({\r\n  logger: m => setText(m['status']),\r\n});\r\n const showresult= async ()=>{\r\n  setText(\"Loading\")\r\n  await worker.load();\r\n    await worker.loadLanguage('eng');\r\n    await worker.initialize('eng');\r\n    const { data: { text } } = await worker.recognize(result);\r\n    setText(text)\r\n }\r\n\r\n const videoConstraints = {\r\n  width: 500,\r\n  height: 500,\r\n  facingMode:mode\r\n};\r\n\r\nconst webcamRef = react.useRef(null);\r\nconst [imgeStatus,setStatus]=useState(false);\r\nconst [src,setSrc]=useState(null);\r\nconst capture = react.useCallback(\r\n  () => {\r\n   const  imageSrc = webcamRef.current.getScreenshot();\r\n    \r\n    setSrc(imageSrc);\r\n    setStatus(true);\r\n    setCam(false);\r\n    setcrop(true);\r\n    setOpen(true);\r\n    \r\n    console.log(\"cap\",imageSrc)\r\n  },\r\n\r\n  [webcamRef]\r\n);\r\nconst [camStatus,setCam]=useState(false);\r\n\r\nconst camOpen=()=>{\r\n  setCam(true);\r\n  setOpen(false);\r\n  setcrop(false);\r\n  setresult(false);\r\n  setText(\"\");\r\n  \r\n  setStatus(false);\r\n  SetResult(null)\r\n  \r\n}\r\nconst camClose=()=>{\r\n  \r\n\r\n}\r\n    return(\r\n       \r\n        <div className=\"main\">\r\n             <div>\r\n        {\r\n            imgeStatus &&\r\n            ( <div style={{marginLeft:'20%',width:\"60%\"}}>\r\n                <ReactCrop src={src}  onImageLoaded={setImage} crop={crop} onChange={setCrop} style={{marginTop:5}}/>\r\n                \r\n                <br/>\r\n               \r\n            </div>\r\n            )\r\n        }\r\n        </div>\r\n          \r\n        { camStatus && <div style={{display:'flex',flexDirection:'column',textAlign:'center'}}>\r\n          <Webcam\r\n        audio={false}\r\n        height={290}\r\n        ref={webcamRef}\r\n        screenshotFormat=\"image/jpeg\"\r\n        width='100%'\r\n        videoConstraints={videoConstraints}\r\n      />\r\n     \r\n    \r\n  </div>\r\n        }\r\n     \r\n      \r\n        <div>\r\n               {\r\n                result && (\r\n                    <img src={result} alt=\"*\"/>\r\n                )\r\n\r\n            }\r\n        </div>\r\n      \r\n      <div style={{display:'flex',marginTop:5,justifyContent:'center'}}>\r\n      {openStatus && <Button variant=\"contained\" color=\"primary\" style={{marginLeft:5}} onClick={camOpen}>\r\n          Open Camera\r\n         </Button>\r\n      }\r\n     { cropStatus && <Button variant=\"contained\" color=\"primary\" style={{marginLeft:5}} onClick={getCroppedImg}>\r\n         Crop\r\n      </Button>\r\n     }\r\n      { resultStatus && <Button variant=\"contained\" color=\"primary\" style={{marginLeft:5}} onClick={showresult}>\r\n         Result\r\n      </Button>\r\n        }\r\n  \r\n       \r\n     \r\n      { camStatus &&\r\n      <div><Button variant=\"contained\" color=\"primary\" style={{width:'100px',marginLeft:5}} onClick={capture}>\r\n      Click1\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={front}>User</Button>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={back}>Environment</Button>\r\n      </div>\r\n      }\r\n\r\n      </div>\r\n           \r\n        <div>\r\n        {text}\r\n        </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Cropper;","import React, { Component } from 'react';\r\nimport Cropper from '../../Cropper';\r\nimport { Button} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\n\r\nconst Form=()=> {\r\n  const classes = useStyles();\r\n\r\n\r\n  \r\n  \r\n    return (\r\n \r\n<div>\r\n<AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n         \r\n        </Toolbar>\r\n      </AppBar>\r\n<div className=\"Main\">\r\n<Cropper />\r\n</div>\r\n</div>\r\n  )\r\n\r\n\r\n  \r\n\r\n}\r\n\r\nexport default Form;\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Form from './Components/Form/Form';\nclass App extends Component {\n\n\n  \n  render() {\n    return (\n\n<div>\n<Form />\n</div>\n  )\n\n\n  }\n\n}\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport swDev from './swDev'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}