{"version":3,"sources":["Cropper.js","Components/Form/Form.js","App.js","reportWebVitals.js","index.js","swDev.js"],"names":["Cropper","useState","unit","crop","setCrop","result","SetResult","openStatus","setOpen","cropStatus","setcrop","resultStatus","setresult","image","setImage","text","setText","webcamRef","react","useRef","imgeStatus","setStatus","src","setSrc","capture","useCallback","imageSrc","current","getScreenshot","setCam","console","log","camStatus","className","onImageLoaded","onChange","style","marginTop","display","flexDirection","textAlign","audio","height","ref","screenshotFormat","width","videoConstraints","facingMode","alt","justifyContent","Button","variant","color","marginLeft","onClick","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","base64Image","toDataURL","Tesseract","recognize","logger","m","catch","err","error","then","data","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","Form","classes","AppBar","position","Toolbar","IconButton","edge","aria-label","App","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","swUrl","process","navigator","serviceWorker","register","res","warn","swDev"],"mappings":"+RA8KeA,EAxKA,WAAK,IAAD,EACEC,mBAChB,CACGC,KAAM,MAHK,mBACZC,EADY,KACPC,EADO,OAQEH,mBAAS,MARX,gCASMA,mBAAS,OATf,mBASZI,EATY,KASLC,EATK,OAUQL,oBAAS,GAVjB,mBAUZM,EAVY,KAUDC,EAVC,OAWQP,oBAAS,GAXjB,mBAWZQ,EAXY,KAWDC,EAXC,OAYYT,oBAAS,GAZrB,mBAYZU,EAZY,KAYCC,EAZD,OAgBIX,qBAhBJ,mBAgBZY,EAhBY,KAgBNC,EAhBM,OAiBEb,mBAAS,IAjBX,mBAiBZc,EAjBY,KAiBPC,EAjBO,KA6ClB,IAoBKC,EAAYC,IAAMC,OAAO,MAjEZ,EAkEUlB,oBAAS,GAlEnB,mBAkEZmB,EAlEY,KAkEDC,EAlEC,OAmEApB,mBAAS,MAnET,mBAmEZqB,EAnEY,KAmERC,EAnEQ,KAoEbC,EAAUN,IAAMO,aACpB,WACC,IAAOC,EAAWT,EAAUU,QAAQC,gBACnCL,EAAOG,GACPL,GAAU,GACVQ,GAAO,GACPnB,GAAQ,GACRF,GAAQ,GAERsB,QAAQC,IAAI,SAGd,CAACd,IAhFgB,EAkFMhB,oBAAS,GAlFf,mBAkFZ+B,EAlFY,KAkFFH,EAlFE,KAmGf,OAEI,sBAAKI,UAAU,OAAf,UACK,8BAEDb,GACE,gCACE,cAAC,IAAD,CAAWE,IAAKA,EAAKY,cAAepB,EAAUX,KAAMA,EAAMgC,SAAU/B,EAASgC,MAAO,CAACC,UAAU,KAC/F,4BAONL,GAAa,qBAAKI,MAAO,CAACE,QAAQ,OAAOC,cAAc,SAASC,UAAU,UAA7D,SACb,cAAC,IAAD,CACFC,OAAO,EACPC,OAAQ,IACRC,IAAK1B,EACL2B,iBAAiB,aACjBC,MAAM,OACNC,iBA9DkB,CACxBD,MAAO,KACPH,OAAQ,IACRK,WAAY,YAmEN,8BAEQ1C,GACI,qBAAKiB,IAAKjB,EAAQ2C,IAAI,QAMpC,sBAAKZ,MAAO,CAACE,QAAQ,OAAOD,UAAU,EAAEY,eAAe,UAAvD,UACC1C,GAAc,cAAC2C,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUhB,MAAO,CAACiB,WAAW,GAAIC,QAvD1E,WACZzB,GAAO,GACPrB,GAAQ,GACRE,GAAQ,GACRE,GAAU,GACVI,EAAQ,IACRF,EAAS,MACTO,GAAU,GACVf,EAAU,OA+CS,yBAIdG,GAAc,cAACyC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUhB,MAAO,CAACiB,WAAW,GAAIC,QA7HvF,WACIxB,QAAQC,IAAI5B,GACb,IAAMoD,EAASC,SAASC,cAAc,UAChCC,EAAS7C,EAAM8C,aAAe9C,EAAMgC,MACpCe,EAAS/C,EAAMgD,cAAgBhD,EAAM6B,OAC3Ca,EAAOV,MAAQ1C,EAAK0C,MACpBU,EAAOb,OAASvC,EAAKuC,OACTa,EAAOO,WAAW,MAE1BC,UACFlD,EACAV,EAAK6D,EAAIN,EACTvD,EAAK8D,EAAIL,EACTzD,EAAK0C,MAAQa,EACbvD,EAAKuC,OAASkB,EACd,EACA,EACAzD,EAAK0C,MACL1C,EAAKuC,QAEP,IAAMwB,EAAcX,EAAOY,UAAU,cACrC/D,GAAQ,GACRI,GAAQ,GACRF,EAAU4D,GACVtD,GAAU,IAqGO,kBAIbD,GAAgB,cAACuC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUhB,MAAO,CAACiB,WAAW,GAAIC,QAtGzE,WAEhBc,IAAUC,UAAUhE,EAClB,MACA,CAAEiE,OAAQ,SAAAC,GAAC,OAAIzC,QAAQC,IAAIwC,MAE5BC,OAAM,SAAAC,GACL3C,QAAQ4C,MAAMD,MAEfE,MAAK,YAAyB,IAAd5D,EAAa,EAArB6D,KAAQ7D,KACfe,QAAQC,IAAIhB,GACZC,EAAQD,OA2FY,oBAOhBiB,GACF,cAACkB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUhB,MAAO,CAACS,MAAM,QAAQQ,WAAW,GAAIC,QAAS9B,EAA1F,sBAME,8BACCT,Q,qDC9JH8D,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,QAiChBC,EA5BJ,WACT,IAAMC,EAAUT,IAKd,OAEJ,gCACA,cAACU,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACQ,cAACC,EAAA,EAAD,CAAStC,QAAQ,QAAjB,SACE,cAACuC,EAAA,EAAD,CAAYC,KAAK,QAAQ1D,UAAWqD,EAAQJ,WAAY9B,MAAM,UAAUwC,aAAW,OAAnF,SACE,cAAC,IAAD,UAKZ,qBAAK3D,UAAU,OAAf,SACA,cAAC,EAAD,UCjBe4D,E,4JAbb,WACE,OAEJ,8BACA,cAAC,EAAD,U,GARkBC,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjD,SAASkD,eAAe,SCVX,WAGX,IAAIC,EAAM,GAAD,OAAIC,QAAJ,UACT9E,QAAQC,IAAI4E,EAAM,OACtBE,UAAUC,cAAcC,SAASJ,GAAOhC,MAAK,SAACqC,GAC1ClF,QAAQmF,KAAK,MAAMD,MACpBxC,MAAM,eDKT0C,GAIAnB,K","file":"static/js/main.cc750ec8.chunk.js","sourcesContent":["import react ,{useState} from 'react';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport Tesseract from 'tesseract.js';\r\nimport ReactCrop from 'react-image-crop';\r\nimport Webcam from \"react-webcam\";\r\nimport { Button} from '@material-ui/core';\r\nconst Cropper =()=>{\r\nconst [crop,setCrop]=useState(\r\n     {\r\n        unit: '%',\r\n      \r\n      }\r\n);\r\n\r\nconst [file,setFile]=useState(null);\r\nconst [result,SetResult]=useState(null);\r\nconst [openStatus,setOpen]=useState(true);\r\nconst [cropStatus,setcrop]=useState(false);\r\nconst [resultStatus,setresult]=useState(false);\r\nconst handleFile=e=>{\r\nsetFile(URL.createObjectURL(e.target.files[0]))\r\n}\r\nconst [image,setImage]=useState();\r\nconst [text,setText]=useState(\"\");\r\n function getCroppedImg() {\r\n     console.log(crop)\r\n    const canvas = document.createElement('canvas');\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext('2d');\r\n   \r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height,\r\n    );\r\n    const base64Image = canvas.toDataURL('image/jpeg');\r\n    setCrop(true);\r\n    setOpen(true);\r\n    SetResult(base64Image);\r\n    setresult(true);\r\n\r\n }\r\n const showresult=()=>{\r\n\r\n  Tesseract.recognize(result, \r\n    'eng',\r\n    { logger: m => console.log(m) }\r\n  )\r\n  .catch(err => {\r\n    console.error(err)\r\n  })\r\n  .then(({ data: { text } }) => {\r\n    console.log(text);\r\n    setText(text);\r\n  })\r\n }\r\n const videoConstraints = {\r\n  width: 1280,\r\n  height: 720,\r\n  facingMode: \"user\"\r\n};\r\n\r\nconst webcamRef = react.useRef(null);\r\nconst [imgeStatus,setStatus]=useState(false);\r\nconst [src,setSrc]=useState(null);\r\nconst capture = react.useCallback(\r\n  () => {\r\n   const  imageSrc = webcamRef.current.getScreenshot();\r\n    setSrc(imageSrc);\r\n    setStatus(true);\r\n    setCam(false);\r\n    setcrop(true);\r\n    setOpen(true);\r\n    \r\n    console.log(\"cap\")\r\n  },\r\n\r\n  [webcamRef]\r\n);\r\nconst [camStatus,setCam]=useState(false);\r\n\r\nconst camOpen=()=>{\r\n  setCam(true);\r\n  setOpen(false);\r\n  setcrop(false);\r\n  setresult(false);\r\n  setText(\"\");\r\n  setImage(null);\r\n  setStatus(false);\r\n  SetResult(null)\r\n  \r\n}\r\nconst camClose=()=>{\r\n  \r\n\r\n}\r\n    return(\r\n       \r\n        <div className=\"main\">\r\n             <div>\r\n        {\r\n            imgeStatus &&\r\n            ( <div>\r\n                <ReactCrop src={src} onImageLoaded={setImage} crop={crop} onChange={setCrop} style={{marginTop:5}}/>\r\n                <br/>\r\n               \r\n            </div>\r\n            )\r\n        }\r\n        </div>\r\n          \r\n        { camStatus && <div style={{display:'flex',flexDirection:'column',textAlign:'center'}}>\r\n          <Webcam\r\n        audio={false}\r\n        height={290}\r\n        ref={webcamRef}\r\n        screenshotFormat=\"image/jpeg\"\r\n        width='100%'\r\n        videoConstraints={videoConstraints}\r\n      />\r\n     \r\n    \r\n  </div>\r\n        }\r\n     \r\n      \r\n        <div>\r\n               {\r\n                result && (\r\n                    <img src={result} alt=\"*\"/>\r\n                )\r\n\r\n            }\r\n        </div>\r\n      \r\n      <div style={{display:'flex',marginTop:5,justifyContent:'center'}}>\r\n      {openStatus && <Button variant=\"contained\" color=\"primary\" style={{marginLeft:5}} onClick={camOpen}>\r\n          Open Camera\r\n         </Button>\r\n      }\r\n     { cropStatus && <Button variant=\"contained\" color=\"primary\" style={{marginLeft:5}} onClick={getCroppedImg}>\r\n         Crop\r\n      </Button>\r\n     }\r\n      { resultStatus && <Button variant=\"contained\" color=\"primary\" style={{marginLeft:5}} onClick={showresult}>\r\n         Result\r\n      </Button>\r\n        }\r\n  \r\n       \r\n     \r\n      { camStatus &&\r\n      <Button variant=\"contained\" color=\"primary\" style={{width:'100px',marginLeft:5}} onClick={capture}>\r\n      Click\r\n      </Button>}\r\n\r\n      </div>\r\n           \r\n        <div>\r\n        {text}\r\n        </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Cropper;","import React, { Component } from 'react';\r\nimport Cropper from '../../Cropper';\r\nimport { Button} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\n\r\nconst Form=()=> {\r\n  const classes = useStyles();\r\n\r\n\r\n  \r\n  \r\n    return (\r\n \r\n<div>\r\n<AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n         \r\n        </Toolbar>\r\n      </AppBar>\r\n<div className=\"Main\">\r\n<Cropper />\r\n</div>\r\n</div>\r\n  )\r\n\r\n\r\n  \r\n\r\n}\r\n\r\nexport default Form;\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Form from './Components/Form/Form';\nclass App extends Component {\n\n\n  \n  render() {\n    return (\n\n<div>\n<Form />\n</div>\n  )\n\n\n  }\n\n}\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport swDev from './swDev'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nswDev();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default function swDev()\r\n{\r\n   \r\n    let swUrl=`${process.env.PUBLIC_URL}/sw.js`\r\n    console.log(swUrl,\"url\")\r\nnavigator.serviceWorker.register(swUrl).then((res)=>{\r\n    console.warn(\"res\",res)\r\n}).catch(\"not working\")\r\n}"],"sourceRoot":""}